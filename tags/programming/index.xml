<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming on Chmouel&#39;s blog</title>
    <link>https://blog.chmouel.com/tags/programming/</link>
    <description>Recent content in Programming on Chmouel&#39;s blog</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>en-GB</language>
    <lastBuildDate>Thu, 22 Sep 2016 10:27:27 +0000</lastBuildDate>
    <atom:link href="https://blog.chmouel.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The trick to get your wordpress behind a reverse proxy</title>
      <link>https://blog.chmouel.com/2016/09/22/the-trick-to-get-your-wordpress-behind-a-reverse-proxy/</link>
      <pubDate>Thu, 22 Sep 2016 10:27:27 +0000</pubDate>
      <guid>https://blog.chmouel.com/2016/09/22/the-trick-to-get-your-wordpress-behind-a-reverse-proxy/</guid>
      <description>&lt;p&gt;I have been meaning to get this blog SSL protected for a while and since solution like &lt;a href=&#34;https://letsencrypt.org&#34;&gt;letsencrypt&lt;/a&gt; makes it easy I have generated some SSL keys for my domain  and configured it in apache.&lt;/p&gt;
&lt;p&gt;So far so good, but the thing is my VM at my hosting provider is pretty small and I have been using &lt;a href=&#34;https://varnish-cache.org/&#34;&gt;varnish&lt;/a&gt; for quite some time or I would get out of memory quickly some the kernel OOM killer kicking&lt;a href=&#34;https://letsencrypt.org&#34;&gt;1&lt;/a&gt; it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The best ways to work with yaml files in Emacs</title>
      <link>https://blog.chmouel.com/2016/09/07/dealing-with-yaml-in-emacs/</link>
      <pubDate>Wed, 07 Sep 2016 07:45:03 +0000</pubDate>
      <guid>https://blog.chmouel.com/2016/09/07/dealing-with-yaml-in-emacs/</guid>
      <description>&lt;p&gt;Sometime ago or at least when I started doing programming in the late 90s &lt;strong&gt;XML&lt;/strong&gt; was all the rage, it promised to be the panacea for everything from data to storage to data presentation and processing. People &lt;a href=&#34;http://discuss.fogcreek.com/joelonsoftware/default.asp?cmd=show&amp;amp;ixPost=953&#34;&gt;realized&lt;/a&gt; that it was just complexity as Joel Spolski points out &lt;em&gt;an attempt to make the complex seem accessible to ordinary people.&lt;/em&gt;. Really people were annoyed to write all those tags as those &amp;lsquo;&amp;lt;&amp;rsquo; and &amp;lsquo;&amp;gt;&amp;rsquo; are hard to reach on a qwerty keyboard.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On trying to be pylint compatible</title>
      <link>https://blog.chmouel.com/2013/04/11/trying-to-be-pylint-compatible/</link>
      <pubDate>Thu, 11 Apr 2013 09:35:29 +0000</pubDate>
      <guid>https://blog.chmouel.com/2013/04/11/trying-to-be-pylint-compatible/</guid>
      <description>&lt;p&gt;How I feel when I try to address all pylint warning/errors:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.chmouel.com/wp-content/uploads/2013/04/tumblr_inline_mk6xomQvzf1qz4rgp.gif&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Adapted from &lt;a href=&#34;http://devopsreactions.tumblr.com/post/47690154351/trying-to-code-to-w3c-standards&#34;&gt;http://devopsreactions.tumblr.com/post/47690154351/trying-to-code-to-w3c-standards&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>emacs anything with magit</title>
      <link>https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/</link>
      <pubDate>Sun, 10 Feb 2013 21:48:33 +0000</pubDate>
      <guid>https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/</guid>
      <description>&lt;p&gt;I have been using quite a bit the &lt;a href=&#34;http://www.emacswiki.org/emacs/Anything&#34;&gt;anything-mode&lt;/a&gt; for Emacs, it&amp;rsquo;s basically a &lt;a href=&#34;http://qsapp.com/&#34; title=&#34;Quicksilver&#34;&gt;Quicksilver&lt;/a&gt;/&lt;a href=&#34;www.alfredapp.com&#34;&gt;Alfred&lt;/a&gt; or &lt;a href=&#34;http://do.cooperteam.net/&#34; title=&#34;Gnome-do&#34;&gt;Gnome-do&lt;/a&gt; for Emacs and allow to configure a lot of different sources to complete some chosen &amp;lsquo;source&amp;rsquo;with different actions.&lt;/p&gt;
&lt;p&gt;With my work on &lt;a href=&#34;http://openstack.org&#34;&gt;OpenStack&lt;/a&gt; I have found myself jumping a lot between git directories and due configured the variable &lt;strong&gt;&amp;lsquo;magit-repo-dirs&lt;/strong&gt; for easy access to most of them easily.&lt;/p&gt;
&lt;p&gt;Plugging those two just seemed natural I had already this in my emacs to quickly open those magit repository directories :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rackspace CloudDNS python binding</title>
      <link>https://blog.chmouel.com/2011/07/17/rackspace-clouddns-python-binding/</link>
      <pubDate>Sun, 17 Jul 2011 07:32:09 +0000</pubDate>
      <guid>https://blog.chmouel.com/2011/07/17/rackspace-clouddns-python-binding/</guid>
      <description>&lt;p&gt;I have released a python binding to &lt;!-- raw HTML omitted --&gt;Rackspace CloudDNS&lt;!-- raw HTML omitted --&gt; here which allow you to create/update/delete domains and records. It&amp;rsquo;s available on github&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://github.com/rackspace/python-clouddns/&#34;&gt;https://github.com/rackspace/python-clouddns/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The binding is pretty simple and have unfortunately no documentation (or even tests) but you can figure out most of it from here :&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://github.com/rackspace/python-clouddns/blob/master/tests/t.py&#34;&gt;https://github.com/rackspace/python-clouddns/blob/master/tests/t.py&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing python-cloudfiles from pypi</title>
      <link>https://blog.chmouel.com/2011/02/16/installing-python-cloudfiles-from-pypi/</link>
      <pubDate>Wed, 16 Feb 2011 05:41:33 +0000</pubDate>
      <guid>https://blog.chmouel.com/2011/02/16/installing-python-cloudfiles-from-pypi/</guid>
      <description>&lt;p&gt;I have just uploaded &lt;a href=&#34;https://github.com/rackspace/python-cloudfiles&#34;&gt;python-cloudfiles&lt;/a&gt; to pypi available &lt;a href=&#34;http://pypi.python.org/pypi/python-cloudfiles/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This make things easy to add as a dependence of your project like you can have something like this in your setup.py :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;requirements = [&#39;python-cloudfiles&#39;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and it will automatically download it as part of the dependence with easy_install or pip.&lt;/p&gt;
&lt;p&gt;cool kids on latest debian/ubuntu can do stuff like this (from &lt;a href=&#34;http://packages.debian.org/sid/python-stdeb&#34;&gt;python-stdeb&lt;/a&gt; package) :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pypi-install python-cloudfiles&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;which would automatically download the tarball from pypi and install it as a packages (like the way it should be for prod machine!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get latest lyrics of a scrobbled LastFM song</title>
      <link>https://blog.chmouel.com/2010/10/09/get-latest-lyrics-of-a-scrobbled-lastfm-song/</link>
      <pubDate>Sat, 09 Oct 2010 07:56:05 +0000</pubDate>
      <guid>https://blog.chmouel.com/2010/10/09/get-latest-lyrics-of-a-scrobbled-lastfm-song/</guid>
      <description>&lt;p&gt;All my music players (Spotify, XBMC, Rythmbox etc&amp;hellip;) are &lt;a href=&#34;http://www.last.fm/help/faq?category=Scrobbling&#34;&gt;scrobbling&lt;/a&gt; over &lt;a href=&#34;http://www.last.fm&#34;&gt;lastfm&lt;/a&gt; but not all of them display song lyrics properly so I came up with a quick Google AppEngine app that grab the latest or current song scrobbled over  last.fm and display its lyrics. No fancy HTML or javascript just the lyrics displayed for your enjoyment.&lt;/p&gt;
&lt;p&gt;This is available here :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://getlastlastfmlyrics.appspot.com/&#34;&gt;http://getlastlastfmlyrics.appspot.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;for the scripter around you can just get (via curl or other) :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python decorator to argument checking</title>
      <link>https://blog.chmouel.com/2010/07/29/python-decorator-to-argument-checking/</link>
      <pubDate>Thu, 29 Jul 2010 19:03:57 +0000</pubDate>
      <guid>https://blog.chmouel.com/2010/07/29/python-decorator-to-argument-checking/</guid>
      <description>&lt;p&gt;I am sure there is billions or more people who already done that but I needed this quickly for my project and was not feeling googling around :&lt;/p&gt;</description>
    </item>
    <item>
      <title>connecting to self signed SSL certificate from Java on Debian/Ubuntu</title>
      <link>https://blog.chmouel.com/2010/06/03/connecting-to-self-signed-ssl-certificate-from-java-on-debian-ubuntu/</link>
      <pubDate>Thu, 03 Jun 2010 10:50:43 +0000</pubDate>
      <guid>https://blog.chmouel.com/2010/06/03/connecting-to-self-signed-ssl-certificate-from-java-on-debian-ubuntu/</guid>
      <description>&lt;p&gt;You want to connect to self signed SSL certificate from Java using the standard &lt;a href=&#34;http://java.sun.com/j2se/1.4.2/docs/api/javax/net/ssl/HttpsURLConnection.html&#34;&gt;HttpsURLConnection&lt;/a&gt; and you are getting this error, because the self signed certificate is obviously not recognized by Java :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SEVERE: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1639)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:215)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:209)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;it seems that there is a lot of &amp;lsquo;solutions&amp;rsquo; (read hack) or workaround around the web which is resumed well on &lt;a href=&#34;http://stackoverflow.com/questions/875467/java-client-certificates-over-https-ssl&#34;&gt;this&lt;/a&gt; stack overflow article.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Jython with the vCloud API</title>
      <link>https://blog.chmouel.com/2010/05/17/using-jython-with-the-vcloud-api/</link>
      <pubDate>Mon, 17 May 2010 20:33:47 +0000</pubDate>
      <guid>https://blog.chmouel.com/2010/05/17/using-jython-with-the-vcloud-api/</guid>
      <description>&lt;p&gt;Lately I had to do a lot of works with the &lt;!-- raw HTML omitted --&gt;VMware VCloud&lt;!-- raw HTML omitted --&gt; product and since the python API did not seem available and I did not have the courage to use the PHP API I had to do most of the API works with Java. I never did any Java before and while I have found Eclipse+Java development surprisingly pleasant and easy to use/learn my favourite are still Emacs+Python.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Accessing to Rackspace Cloud Files via servicenet (update)</title>
      <link>https://blog.chmouel.com/2009/10/20/accessing-to-rackspace-cloud-files-via-servicenet-update/</link>
      <pubDate>Tue, 20 Oct 2009 18:47:49 +0000</pubDate>
      <guid>https://blog.chmouel.com/2009/10/20/accessing-to-rackspace-cloud-files-via-servicenet-update/</guid>
      <description>&lt;p&gt;Last week I have posted an article explaining how to connect to Rackspace Cloud Files via Rackspace ServiceNET but I actually got it wrong as pointed by my great colleague &lt;a href=&#34;http://12.am/&#34;&gt;exlt&lt;/a&gt; so I had to take it down until figured out how to fix it.&lt;/p&gt;
&lt;p&gt;I have add that feature properly to the PHP and Python API in version 1.5.0 to add a &amp;lsquo;servicenet&amp;rsquo; argument to the connection and updated the blog post here :&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to connect to Rackspace Cloud Files via ServiceNET</title>
      <link>https://blog.chmouel.com/2009/10/14/how-to-connect-to-rackspace-cloud-files-via-servicenet/</link>
      <pubDate>Wed, 14 Oct 2009 00:47:27 +0000</pubDate>
      <guid>https://blog.chmouel.com/2009/10/14/how-to-connect-to-rackspace-cloud-files-via-servicenet/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;If you are a Rackspace customer and you are are planning to use Rackspace Cloud Files via it&amp;rsquo;s internal network (ServiceNet) so you don&amp;rsquo;t get billed for the bandwidth going over Cloud Files this is how you can do.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The first thing is to make sure with your support team if your servers are connected to ServiceNet and if you have that connection then there is a small change to do in your code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rackspace Cloud Files helper scripts</title>
      <link>https://blog.chmouel.com/2009/09/24/rackspace-cloud-files-helper-scripts/</link>
      <pubDate>Thu, 24 Sep 2009 21:10:18 +0000</pubDate>
      <guid>https://blog.chmouel.com/2009/09/24/rackspace-cloud-files-helper-scripts/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It&amp;rsquo;s really a collection of quickly written stuff put in the same file&lt;br&gt;
but at least if not useful for you it would give you an idea how the&lt;br&gt;
python-cloudfiles works. It is all available here :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://github.com/chmouel/cloud-files-helper&#34;&gt;http://github.com/chmouel/cloud-files-helper&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upload to Rackspace Cloud files from GNOME nautilus</title>
      <link>https://blog.chmouel.com/2009/09/02/upload-to-rackspace-cloud-files-from-gnome-nautilus/</link>
      <pubDate>Wed, 02 Sep 2009 16:49:30 +0000</pubDate>
      <guid>https://blog.chmouel.com/2009/09/02/upload-to-rackspace-cloud-files-from-gnome-nautilus/</guid>
      <description>&lt;p&gt;After seeing this script &lt;a href=&#34;http://overhrd.com/?p=106&#34;&gt;http://overhrd.com/?p=106&lt;/a&gt; which allow to upload files with the file manager (finder) of MacosX to Rackspace Cloud Files, I have made a nautilus script that doe the same for us Gnome/Unix users.&lt;/p&gt;
&lt;p&gt;Available here :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://github.com/chmouel/nautilus-rackspace-cloud-file/tree/master&#34;&gt;http://github.com/chmouel/nautilus-rackspace-cloud-file/tree/master&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Better output from sqlite3 command line</title>
      <link>https://blog.chmouel.com/2009/07/16/better-output-from-sqlite3-command-line/</link>
      <pubDate>Wed, 15 Jul 2009 23:47:55 +0000</pubDate>
      <guid>https://blog.chmouel.com/2009/07/16/better-output-from-sqlite3-command-line/</guid>
      <description>&lt;p&gt;That weird output from sqlite3 command line is annoying you as well ? Just set this up to get something better :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;lt; &amp;lt;EOF&amp;gt;~/.sqliterc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.mode &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;column&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.headers on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.explain on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Ruby XMLRPC over a Self Certified SSL with a warning</title>
      <link>https://blog.chmouel.com/2008/03/21/ruby-xmlrpc-over-a-self-certified-ssl-with-a-warning/</link>
      <pubDate>Fri, 21 Mar 2008 16:56:05 +0000</pubDate>
      <guid>https://blog.chmouel.com/2008/03/21/ruby-xmlrpc-over-a-self-certified-ssl-with-a-warning/</guid>
      <description>&lt;p&gt;If you use the XMLRPC client in ruby over a self certified SSL you have this warning :&lt;/p&gt;
&lt;p&gt;&lt;em&gt;warning: peer certificate won&amp;rsquo;t be verified in this SSL session&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can get override that warning cleanly (i have seen some people who just comment the message in the standard library) like that :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;xmlrpc/client&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;net/https&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;openssl&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;pp&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;module&lt;/span&gt; SELF_SSL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Net_HTTP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; Net&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;HTTP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;initialize&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;args)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;super&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@ssl_context&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; OpenSSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;SSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;SSLContext&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;new
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@ssl_context&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;verify_mode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; OpenSSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;SSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;VERIFY_NONE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;XMLRPC_Client&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; XMLRPC&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Client
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;initialize&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;args)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;super&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@http&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SELF_SSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;Net_HTTP&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;new( &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@host&lt;/span&gt;, &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@port&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@proxy_host&lt;/span&gt;,&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@proxy_port&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@http&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;use_ssl &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@use_ssl&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@use_ssl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@http&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_timeout &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@timeout&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@http&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;open_timeout &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;@timeout&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; __FILE__ &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  f &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SELF_SSL&lt;span style=&#34;color:#ff79c6&#34;&gt;::&lt;/span&gt;XMLRPC_Client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;new2(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://url&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;puts&lt;/span&gt; f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;call(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;arg&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Yum Force Exclude List</title>
      <link>https://blog.chmouel.com/2008/03/20/yum-force-exclude-list/</link>
      <pubDate>Thu, 20 Mar 2008 09:36:06 +0000</pubDate>
      <guid>https://blog.chmouel.com/2008/03/20/yum-force-exclude-list/</guid>
      <description>&lt;p&gt;While talking with my fellow colleague Darren Birkett about what seems a design limitation&lt;br&gt;
of yum to not be able to force listing the excludes from yum. I had a&lt;br&gt;
shoot to make a yum plugin to force listing the excludes.&lt;/p&gt;
&lt;p&gt;Here is how it works :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;root@centos5:&lt;del&gt;&amp;gt; grep exclude /etc/yum.conf&lt;br&gt;
exclude=rpm*&lt;br&gt;
root@centos5:&lt;/del&gt;&amp;gt; yum install rpm-devel&lt;br&gt;
Loading &amp;ldquo;installonlyn&amp;rdquo; plugin&lt;br&gt;
Loading &amp;ldquo;changelog&amp;rdquo; plugin&lt;br&gt;
Loading &amp;ldquo;chmouel&amp;rdquo; plugin&lt;br&gt;
Loading &amp;ldquo;priorities&amp;rdquo; plugin&lt;br&gt;
Setting up Install Process&lt;br&gt;
Setting up repositories&lt;br&gt;
Reading repository metadata in from local files&lt;br&gt;
Excluding Packages in global exclude list&lt;br&gt;
Finished&lt;br&gt;
0 packages excluded due to repository priority protections&lt;br&gt;
Parsing package install arguments&lt;br&gt;
Nothing to do&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating md5 encrypted password for chpasswd</title>
      <link>https://blog.chmouel.com/2007/08/17/generating-md5-encrypted-password-for-chpasswd/</link>
      <pubDate>Fri, 17 Aug 2007 07:11:38 +0000</pubDate>
      <guid>https://blog.chmouel.com/2007/08/17/generating-md5-encrypted-password-for-chpasswd/</guid>
      <description>&lt;p&gt;If you want to generate properly encrypted password to feed to chpasswd, the most easier and proper way is to do that from command line :&lt;br&gt;
[code lang=&amp;ldquo;bash&amp;rdquo;]&lt;br&gt;
echo &amp;ldquo;encryptedpassword&amp;rdquo;|openssl passwd -1 -stdin&lt;br&gt;
[/code]&lt;br&gt;
If you want to generate in pure python you can do it like that :&lt;br&gt;
[code lang=&amp;ldquo;python&amp;rdquo;]&lt;br&gt;
def md5crypt(password, salt, magic=&amp;rsquo;$1$&amp;rsquo;):&lt;br&gt;
import md5&lt;br&gt;
m = md5.new()&lt;br&gt;
m.update(password + magic + salt)&lt;/p&gt;
&lt;p&gt;# /* Then just as many characters of the MD5(pw,salt,pw) */&lt;br&gt;
mixin = md5.md5(password + salt + password).digest()&lt;br&gt;
for i in range(0, len(password)):&lt;br&gt;
m.update(mixin[i % 16])&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linus Torvalds on GIT</title>
      <link>https://blog.chmouel.com/2007/05/29/linus-torvalds-on-git/</link>
      <pubDate>Tue, 29 May 2007 11:36:17 +0000</pubDate>
      <guid>https://blog.chmouel.com/2007/05/29/linus-torvalds-on-git/</guid>
      <description>&lt;p&gt;Pretty good video to look if you like to know more about git and its creation :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=4XpnKHJAok8&#34;&gt;http://www.youtube.com/watch?v=4XpnKHJAok8&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Access Gajim within Emacs</title>
      <link>https://blog.chmouel.com/2006/07/31/access-gajim-within-emacs/</link>
      <pubDate>Mon, 31 Jul 2006 09:28:56 +0000</pubDate>
      <guid>https://blog.chmouel.com/2006/07/31/access-gajim-within-emacs/</guid>
      <description>&lt;p&gt;Here is some function to launch a gajim window from Emacs :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;defvar&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-remote&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/usr/bin/gajim-remote&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;defvar&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt; ())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;defun&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;my-gajim-get-list&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;save-excursion&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;with-temp-buffer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;call-process&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-remote&lt;/span&gt; nil t nil &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;list_contacts&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;goto-char&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;point-min&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;re-search-forward&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;^jid[ ]*:[ ]*\\(.*\\)$&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;point-max&lt;/span&gt;) t )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#ff79c6&#34;&gt;setq&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt; (&lt;span style=&#34;color:#50fa7b&#34;&gt;append&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt; (&lt;span style=&#34;color:#50fa7b&#34;&gt;list&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;match-string-no-properties&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)))))))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;defun&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;my-gajim-talk&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;interactive&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#ff79c6&#34;&gt;let*&lt;/span&gt; ((&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;ff&lt;/span&gt; (&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#50fa7b&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt;)(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;my-gajim-get-list&lt;/span&gt;) &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-user-list&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;answer&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;completing-read&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Jabber: &amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#50fa7b&#34;&gt;mapcar&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;lambda&lt;/span&gt; (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;tt&lt;/span&gt;)(&lt;span style=&#34;color:#50fa7b&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;tt&lt;/span&gt;)) &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;ff&lt;/span&gt;))))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;answer&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;start-process&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;*GAJIM*&amp;#34;&lt;/span&gt; nil &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;gajim-remote&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;open_chat&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;answer&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;global-set-key&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;[&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;control&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;x&lt;/span&gt;)(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;j&lt;/span&gt;)&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;my-gajim-talk&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If Emacs had a dbus support that would have been cool.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
