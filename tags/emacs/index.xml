<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Emacs on Chmouel&#39;s blog</title>
    <link>https://blog.chmouel.com/tags/emacs/</link>
    <description>Recent content in Emacs on Chmouel&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Wed, 07 Sep 2016 07:45:03 +0000</lastBuildDate><atom:link href="https://blog.chmouel.com/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The best ways to work with yaml files in Emacs</title>
      <link>https://blog.chmouel.com/2016/09/07/dealing-with-yaml-in-emacs/</link>
      <pubDate>Wed, 07 Sep 2016 07:45:03 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2016/09/07/dealing-with-yaml-in-emacs/</guid>
      <description>Sometime ago or at least when I started doing programming in the late 90s XML was all the rage, it promised to be the panacea for everything from data to storage to data presentation and processing. People realized that it was just complexity as Joel Spolski points out an attempt to make the complex seem accessible to ordinary people.. Really people were annoyed to write all those tags as those &amp;lsquo;&amp;lt;&amp;rsquo; and &amp;lsquo;&amp;gt;&amp;rsquo; are hard to reach on a qwerty keyboard.</description>
    </item>
    
    <item>
      <title>Announcing the (Paris (Emacs) Meetup) Group</title>
      <link>https://blog.chmouel.com/2014/03/31/paris-emacs-meetup-group/</link>
      <pubDate>Mon, 31 Mar 2014 18:22:15 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2014/03/31/paris-emacs-meetup-group/</guid>
      <description>I am lucky to sit in front of Julien Danjou at work and as the sole Emacs users on the side of our office it was come to our attention that we needed as emacsian to unite ourselves to preach the good parole of the church of Emacs and sexy mens.
It was quite obvious that the only way to convince those in the unkown was to find an excuse for drinks good food between good people and set-up a meetup.</description>
    </item>
    
    <item>
      <title>How do I manage my copyright headers in Emacs</title>
      <link>https://blog.chmouel.com/2014/03/14/how-do-i-manage-my-copyright-headers-in-emacs/</link>
      <pubDate>Fri, 14 Mar 2014 07:07:41 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2014/03/14/how-do-i-manage-my-copyright-headers-in-emacs/</guid>
      <description>My day to day being work or personal is to create OpenSource code. As an habit I have taken lately I am adding licenses to all new files I am creating.
I have historically used the `auto-insert-mode with a default template. For example for my newly created python files I would have this for configration :
;AutoInsert (auto-insert-mode &amp;#39;t) (setq auto-insert-alist &amp;#39;((python-mode . &amp;#34;python.py&amp;#34;))) and in my `auto-insert-directorydirectory there would be a python.</description>
    </item>
    
    <item>
      <title>emacs anything with magit</title>
      <link>https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/</link>
      <pubDate>Sun, 10 Feb 2013 21:48:33 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/</guid>
      <description>I have been using quite a bit the anything-mode for Emacs, it&amp;rsquo;s basically a Quicksilver/Alfred or Gnome-do for Emacs and allow to configure a lot of different sources to complete some chosen &amp;lsquo;source&amp;rsquo;with different actions.
With my work on OpenStack I have found myself jumping a lot between git directories and due configured the variable &amp;lsquo;magit-repo-dirs for easy access to most of them easily.
Plugging those two just seemed natural I had already this in my emacs to quickly open those magit repository directories :</description>
    </item>
    
    <item>
      <title>Emacs and nosetests</title>
      <link>https://blog.chmouel.com/2012/10/14/emacs-and-nosetests/</link>
      <pubDate>Sun, 14 Oct 2012 14:19:07 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2012/10/14/emacs-and-nosetests/</guid>
      <description>Sometime you just need a long trans atlantic flight and a stupidly long stop-over in a random city to do some of those task that can improve your day to day but you never take some time to do it.
When using emacs I wanted a simple way to launch a nosetests on the current function my cursor is in Emacs. The syntax on nosetests is a bit tricky and I actually always have to look at my shell history to know the proper syntax (nosetests directory/filename.</description>
    </item>
    
    <item>
      <title>Customize face at point in Emacs</title>
      <link>https://blog.chmouel.com/2009/12/22/customize-face-at-point-in-emacs/</link>
      <pubDate>Tue, 22 Dec 2009 16:58:02 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2009/12/22/customize-face-at-point-in-emacs/</guid>
      <description>It&amp;rsquo;s probably interesting only for the hardcore Emacs users but the last CVS version of emacs (2009-12-17) get a nifty new improvement if you need to customize a face property.
If you point on the text where you want to customize it will detect it automatically which face point you are on and ask you if this is what you want to customize (after launching the command M-x customize-face). No guessing around with list-face-displays anymore.</description>
    </item>
    
    <item>
      <title>Emacs transparency with mouse wheel</title>
      <link>https://blog.chmouel.com/2009/09/16/emacs-and-transparency-mouse-wheel/</link>
      <pubDate>Wed, 16 Sep 2009 02:52:22 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2009/09/16/emacs-and-transparency-mouse-wheel/</guid>
      <description>Emacs is playing fancy on the latest version (since emacs 23) it has now support for transparency at least on Linux when you have a composited Windows Manager.
As explained on the Emacs wiki here everything is controlled by this frame parameter like this :
I have automated the thing to allow the transparency to increase or decrease when combined with the alt key just put this code somewhere in your $HOME/.</description>
    </item>
    
    <item>
      <title>python syntax warning in emacs</title>
      <link>https://blog.chmouel.com/2009/08/31/python-syntax-warning-in-emacs/</link>
      <pubDate>Mon, 31 Aug 2009 05:04:28 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2009/08/31/python-syntax-warning-in-emacs/</guid>
      <description>One of the best feature to have with Emacs when doing python development is to have a real time syntax error/warning check highlighted in your code to avoid many errors or superfluous code.
This code is taken from the brillant Emacswiki python page.
You need to install pyflakes first which should be available on your linux distro by default in a package or for the other OS you may follow the procedure from the pyflakes webpage.</description>
    </item>
    
    <item>
      <title>emacs daemon and Xdefaults</title>
      <link>https://blog.chmouel.com/2009/08/11/emacs-daemon-and-xdefaults/</link>
      <pubDate>Tue, 11 Aug 2009 09:27:21 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2009/08/11/emacs-daemon-and-xdefaults/</guid>
      <description>It does not seems that emacs started with &amp;ndash;daemon read the .Xdefauls resource it seems that the only way setting it is by the default-frame-alist variable.
I have my setup like this :
PS: inconsolata font can be installed from the package ttf-inconsolata</description>
    </item>
    
    <item>
      <title>Update Emacs/VIM tags with inotify</title>
      <link>https://blog.chmouel.com/2009/07/03/update-emacsvim-tags-with-inotify/</link>
      <pubDate>Fri, 03 Jul 2009 18:12:30 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2009/07/03/update-emacsvim-tags-with-inotify/</guid>
      <description>When you use the tags interface for Emacs or with VIM you have to generate your tag file everytime you have a new class or things get changed. Would not be cool to have inotify monitoring your project directory and run the etags command to generate it.
With incron you have cron that can watch some portion of the filesystem and generate an action if certain event appears. So after installed (aptitude/urpmi) it I have configured this incrontab entry :</description>
    </item>
    
    <item>
      <title>FFAP and Ruby in Emacs</title>
      <link>https://blog.chmouel.com/2008/05/04/ffap-and-ruby-in-emacs/</link>
      <pubDate>Sun, 04 May 2008 19:13:41 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2008/05/04/ffap-and-ruby-in-emacs/</guid>
      <description>If you want to use FFAP (find-file-at-point) in ruby-mode you can add this to your .emacs
When you do ffap (i bind it to C-x f) near a require &amp;lsquo;PP&amp;rsquo; for example it will find it in your ruby path.</description>
    </item>
    
    <item>
      <title>Emacs config</title>
      <link>https://blog.chmouel.com/2007/09/07/emacs-config/</link>
      <pubDate>Fri, 07 Sep 2007 07:57:34 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2007/09/07/emacs-config/</guid>
      <description>To anyone interested my extensive Emacs configuration is available here :
http://code.google.com/p/chmouel/sourceAnd here is the usual screen shot :</description>
    </item>
    
    <item>
      <title>Always search before coding</title>
      <link>https://blog.chmouel.com/2007/02/11/always-search-before-coding/</link>
      <pubDate>Sun, 11 Feb 2007 11:47:39 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2007/02/11/always-search-before-coding/</guid>
      <description>This is a annoying, even if it take 5mn to code thing like that :
you discover after a litlle while that if you have did a lilt bit of searching before, you will have discovered a variable call `dired-recursive-deletes` that would do the thing in a much better way.</description>
    </item>
    
    <item>
      <title>Emacs nighly cvs snapshot with xft on Ubuntu Edgy</title>
      <link>https://blog.chmouel.com/2007/01/21/emacs-nighly-cvs-snapshot-with-xft-on-ubuntu-edgy/</link>
      <pubDate>Sun, 21 Jan 2007 12:32:54 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2007/01/21/emacs-nighly-cvs-snapshot-with-xft-on-ubuntu-edgy/</guid>
      <description>I wanted to try the latest cvs snapshot with XFT support, since i did not want to screw up more my workstation i have used packages instead of make install blindy.
Basically i have a script called ./build.sh
in patches/with-font.patch i have :
i have as well in patches/ the ubuntu (or could be debian) patch downloaded from the ubuntu (or debian archive) archive which is for ubuntu on
http://archive.ubuntu.com/ubuntu/pool/universe/e/emacs-wiki</description>
    </item>
    
    <item>
      <title>Rename bunch of file via regexp</title>
      <link>https://blog.chmouel.com/2007/01/06/rename-bunch-of-file-via-regexp/</link>
      <pubDate>Sun, 07 Jan 2007 02:48:46 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2007/01/06/rename-bunch-of-file-via-regexp/</guid>
      <description>To rename bunch of files via regexp i was using before a homegrown python script call rename-regexp.py{#p38} to change bunch of files with a regexp.
But since then i discovered wdired which is pretty fantastic to use that from emacs. With the extended ``query-replace-regexp`` from Emacs22 stuff are much easier to rename.</description>
    </item>
    
    <item>
      <title>My first webpage</title>
      <link>https://blog.chmouel.com/2006/12/30/my-first-webpage/</link>
      <pubDate>Sat, 30 Dec 2006 18:01:43 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2006/12/30/my-first-webpage/</guid>
      <description>Classic my first webpage is still on the web that was back in 98 and that was about Emacs :)
http://membres.lycos.fr/crblinux/html/xemacs.html
It is in french thought.</description>
    </item>
    
    <item>
      <title>Xterm like Control-L in Eshell</title>
      <link>https://blog.chmouel.com/2006/12/27/xterm-like-control-l-in-eshell/</link>
      <pubDate>Thu, 28 Dec 2006 00:00:15 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2006/12/27/xterm-like-control-l-in-eshell/</guid>
      <description>If you want to emulate Control-L in Eshell (the Emacs Shell) like in Xterm, you can use this :And add a key bind to it in your custom hook :</description>
    </item>
    
    <item>
      <title>Cheetah Mode for Emacs</title>
      <link>https://blog.chmouel.com/2006/07/31/cheetah-mode-for-emacs/</link>
      <pubDate>Mon, 31 Jul 2006 23:35:09 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2006/07/31/cheetah-mode-for-emacs/</guid>
      <description>Here is a simple html derived mode for Cheetah templates files. The font-locking regexp can be improved thought but thatâ€™s a start.</description>
    </item>
    
    <item>
      <title>Access Gajim within Emacs</title>
      <link>https://blog.chmouel.com/2006/07/31/access-gajim-within-emacs/</link>
      <pubDate>Mon, 31 Jul 2006 09:28:56 +0000</pubDate>
      
      <guid>https://blog.chmouel.com/2006/07/31/access-gajim-within-emacs/</guid>
      <description>Here is some function to launch a gajim window from Emacs :
If Emacs had a dbus support that would have been cool.</description>
    </item>
    
  </channel>
</rss>
