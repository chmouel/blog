<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chmouel&#39;s blog</title>
    <link>https://blog.chmouel.com/</link>
    <description>Recent content on Chmouel&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 25 Apr 2023 09:00:56 +0200</lastBuildDate>
    <atom:link href="https://blog.chmouel.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>qmk space cadet plus</title>
      <link>https://blog.chmouel.com/posts/qmk-space-cadet-plus-plus/</link>
      <pubDate>Tue, 25 Apr 2023 09:00:56 +0200</pubDate>
      <guid>https://blog.chmouel.com/posts/qmk-space-cadet-plus-plus/</guid>
      <description>I enjoy the space cadet feature of QMK :
https://docs.qmk.fm/#/feature_space_cadet
The feature is simple but yet powerful, when you hit one press you send a parenthese open or close form the other side and if you hold it you have shift.
I am not sure what happened to my config, but I could not get it to work with the default macros offered SC_LSPO and SC_RSPO.
I dug into the process_record_user() function hook to replicate the feature and add one other &amp;rsquo;thing&amp;rsquo; where if you press another shift at the same time of the keypress it will do a right bracket.</description>
    </item>
    <item>
      <title>Selecting files in ZSH With fzf and exa</title>
      <link>https://blog.chmouel.com/posts/selecting-files-in-zsh-with-fzf/</link>
      <pubDate>Wed, 11 Jan 2023 15:41:47 +0100</pubDate>
      <guid>https://blog.chmouel.com/posts/selecting-files-in-zsh-with-fzf/</guid>
      <description>Sometime the tiniest optimization makes a huge difference. When I am not using Emacs and dired I usually just use the shell with zsh to do all my file management.
This is fine and great but sometime when I need to select multiple files with different names, I would have to do a lot of tabs and selection or copy and paste to select properly the list of files I want to do operations on.</description>
    </item>
    <item>
      <title>shell completions with go cobra library</title>
      <link>https://blog.chmouel.com/posts/cobra-completions/</link>
      <pubDate>Tue, 22 Nov 2022 09:00:56 +0200</pubDate>
      <guid>https://blog.chmouel.com/posts/cobra-completions/</guid>
      <description>Every time I press the [TAB] key in my shell, it bothers me that nothing happens.
I&amp;rsquo;m not very smart, so I often press the [TAB] key multiple times, hoping that maybe the seventh time will magically produce the completion that I expect.
However, magic is not a computer function, and if a user or command line interface (CLI) author has not provided a completion function, nothing will ever happen.</description>
    </item>
    <item>
      <title>snazy - a snazzy json log viewer</title>
      <link>https://blog.chmouel.com/posts/snazy-log-viewer/</link>
      <pubDate>Sat, 05 Nov 2022 09:00:56 +0200</pubDate>
      <guid>https://blog.chmouel.com/posts/snazy-log-viewer/</guid>
      <description>I have been meaning to write an article about tools that I have developed lately to make it easier for my day to day life work.
Being a so called &amp;ldquo;Kubernetes cloud native developer&amp;rdquo; (don&amp;rsquo;t laugh at the title because I do) I have to watch a log of controller logs. Most controller logs output in JSON format which is a nice tool for computers but not straightforward to parse to the eyes of the mere mortals.</description>
    </item>
    <item>
      <title>Error chaining with Rust and Go</title>
      <link>https://blog.chmouel.com/posts/rust-errorhandling/</link>
      <pubDate>Fri, 20 May 2022 09:54:31 +0200</pubDate>
      <guid>https://blog.chmouel.com/posts/rust-errorhandling/</guid>
      <description>I was talking with a colleague about Rust and we were wondering (since we are both learning the language) how error handling compares to Go.
Chaining error in Go Go&amp;rsquo;s best practice when you want to chain multiple errors is to &amp;ldquo;wrap&amp;rdquo; them.
For example let&amp;rsquo;s say you have this function returning an error:
func do_something() err { value := &amp;#34;value&amp;#34; if value != &amp;#34;expected&amp;#34; { return fmt.Errorf(&amp;#34;this was not expected&amp;#34;) } } when we call the function do_something() from another function, we want to add context to it and to do so we will wrap it around it with the &amp;ldquo;%w&amp;rdquo; directive:</description>
    </item>
    <item>
      <title>Generating Preview Environments with Tekton</title>
      <link>https://blog.chmouel.com/posts/generating-preview-environment-with-tekton/</link>
      <pubDate>Thu, 07 Apr 2022 20:50:00 +0200</pubDate>
      <guid>https://blog.chmouel.com/posts/generating-preview-environment-with-tekton/</guid>
      <description>On Pipelines as Code we started to get a nice documentation website on :
https://pipelinesascode.com
The website is statically generated with Hugo and hosted on CloudFares Pages using the markdown files from the repository.
So far that&amp;rsquo;s a pretty standard stack, but what we wanted is to be able to get preview URLS like on Netlify or other CIs
There is a nice check box, that says &amp;ldquo;Generate Preview URL on Pull Request&amp;rdquo; which seems to do what we want but it doesn&amp;rsquo;t.</description>
    </item>
    <item>
      <title>vtplug a very dumb and tiny zsh plugin manager</title>
      <link>https://blog.chmouel.com/2022/03/18/vtplug-a-very-dumb-and-tiny-zsh-plugin-manager/</link>
      <pubDate>Fri, 18 Mar 2022 11:06:19 +0000</pubDate>
      <guid>https://blog.chmouel.com/2022/03/18/vtplug-a-very-dumb-and-tiny-zsh-plugin-manager/</guid>
      <description>There is a lot of zsh plugin manager around :
https://github.com/unixorn/awesome-zsh-plugins#frameworks
They all allow you to add cool new features to your shell easily and for authors to easily share their plugin with users and frameworks.
While a lot of people are probably using frameworks like oh-my-zsh which does everything for them with minimal setup.
But since I have been using zsh since much before than those frameworks existed, I always ran my custom config.</description>
    </item>
    <item>
      <title>Show plugins list to a CLI when using goâ€™s cobra library</title>
      <link>https://blog.chmouel.com/2022/03/18/show-plugins-list-to-a-cli-when-using-gos-cobra-library/</link>
      <pubDate>Fri, 18 Mar 2022 08:53:02 +0000</pubDate>
      <guid>https://blog.chmouel.com/2022/03/18/show-plugins-list-to-a-cli-when-using-gos-cobra-library/</guid>
      <description>With the TektonCD CLI we have a system of &amp;ldquo;plugins&amp;rdquo;, it&amp;rsquo;s the same very simple CLI plugin system you have with git or kubectl, if you do a :
kubectl blah foo --bar
since kubectl knows it doesn&amp;rsquo;t have the blah command will try to go over the filesystem paths in your $PATH environment and sees if there is a binary called kubectl-blah and if it finds it will pass the arguments to the binary which effectively become :</description>
    </item>
    <item>
      <title>Running tasks as non root on OpenShift Pipelines</title>
      <link>https://blog.chmouel.com/2022/03/07/running-tasks-as-non-root-on-openshift-pipelines/</link>
      <pubDate>Mon, 07 Mar 2022 08:04:02 +0000</pubDate>
      <guid>https://blog.chmouel.com/2022/03/07/running-tasks-as-non-root-on-openshift-pipelines/</guid>
      <description>Expanding on my previous blog post on getting buildah to run with user namespaces or as rootless. There is another important security topic to talk about is how to run everything on OpenShift Pipeline as non root and not just the buildah task.
On OpenShift Pipelines we made the conscious decision to run all the TaskRuns and Pipelinerun by default under a custom ServiceAccount called pipelines.
That&amp;rsquo;s it, unless overridden by the user in its pipelinerun or taskrun, it will use the pipelines ServiceAccount which has a few elevated privileges.</description>
    </item>
    <item>
      <title>User namespaces with Buildah and OpenShift Pipelines</title>
      <link>https://blog.chmouel.com/2022/01/25/user-namespaces-with-buildah-and-openshift-pipelines/</link>
      <pubDate>Tue, 25 Jan 2022 10:07:07 +0000</pubDate>
      <guid>https://blog.chmouel.com/2022/01/25/user-namespaces-with-buildah-and-openshift-pipelines/</guid>
      <description>In 2022 one of the hottest topic around CI is how to secure it every steps along the way.
The so-called supply chain attacks have been more and more an attack vector for bad actor whereas providers need to make sure every piece of the Integration is secure.
One area that was identified as something we can improve with Openshift and containers in general is when running as root on the container may expose the host and process in that container may be able to mingle with other resources.</description>
    </item>
    <item>
      <title>For the love of centered windows gnome extension edition</title>
      <link>https://blog.chmouel.com/2021/11/19/for-the-love-of-centered-windows-gnome-extension-edition/</link>
      <pubDate>Fri, 19 Nov 2021 11:41:54 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/11/19/for-the-love-of-centered-windows-gnome-extension-edition/</guid>
      <description>Feels weird or great or stupid or pretty smart or whatever to be wrong. Just when I wrote that previous blog post : https://blog.chmouel.com/2021/11/14/for-the-love-of-centered-windows/ that I realize that shelll script doesn&amp;rsquo;t work great on wayland.
I didn&amp;rsquo;t really understood how Wayland works and just assumed that my tiny scripts just works. But experiencing not working on a native Wayland application and understanding how wayland works: https://wayland.freedesktop.org/docs/html/ch05.html it obviously needed a better way to do that if I have to keep up with the modern world of a linux desktop.</description>
    </item>
    <item>
      <title>For the love of centered windows</title>
      <link>https://blog.chmouel.com/2021/11/14/for-the-love-of-centered-windows/</link>
      <pubDate>Sun, 14 Nov 2021 06:36:06 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/11/14/for-the-love-of-centered-windows/</guid>
      <description>Sometime over a 2020 confinement my work decided to give us some money to buy some work from home office items.
I didn&amp;rsquo;t need much at that time since I was already settled with everything I needed in a work from home office but decided to go for a fancy new screen since well why not and the other one (a standard 24&amp;quot; display) could find some good use for my teenage gamer son.</description>
    </item>
    <item>
      <title>How to make a release pipeline with Pipelines as Code</title>
      <link>https://blog.chmouel.com/2021/07/01/how-to-make-a-release-pipeline-with-pipelines-as-code/</link>
      <pubDate>Thu, 01 Jul 2021 12:44:25 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/07/01/how-to-make-a-release-pipeline-with-pipelines-as-code/</guid>
      <description>One of the early goal of Pipelines as Code on Tekton is to make sure we were able to have the project CI running with itself.
The common user case of validating pull request was quickly implemented and you can find more information about it in this walkthough video :
For slightly more advanced use case here is how we made a release pipeline for the project.
The goal is when we tag a release and push the tags to the GitHUB repo it will</description>
    </item>
    <item>
      <title>Speed up your tekton pipeline caching the hacky way</title>
      <link>https://blog.chmouel.com/2021/05/25/speed-up-your-tekton-pipeline-caching-the-hacky-way/</link>
      <pubDate>Tue, 25 May 2021 08:51:33 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/05/25/speed-up-your-tekton-pipeline-caching-the-hacky-way/</guid>
      <description>There is one thing that can get your wind up when you try to iterate quickly in a PR is to have a slow CI.
While working on a go project with a comprehensive test suite it was usually taking over 20 to 30 minutes to run and being as patient as a kid waiting for her candy floss to be ready I am eagerly waiting that my pipeline is Green or not.</description>
    </item>
    <item>
      <title>NextDNS &#43; DNSMasq DHCP and local names</title>
      <link>https://blog.chmouel.com/2021/04/19/nextdns-dnsmasq-dhcp-and-local-names/</link>
      <pubDate>Mon, 19 Apr 2021 07:42:47 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/04/19/nextdns-dnsmasq-dhcp-and-local-names/</guid>
      <description>Took me a little bit a while to figure out so here is some documentation,
My router from my ISP which is generally pretty good, doesn&amp;rsquo;t support local dns names which is annoying in itself. Combined with NextDNS, I have no way to identify the devices on my network.
So there I went configured dnsmasq on my tiny raspbery-pi :
port=5353 no-resolv interface=eth0 except-interface=lo listen-address=::1,192.168.0.3 no-dhcp-interface= bind-interfaces cache-size=10000 local-ttl=2 log-async log-queries bogus-priv server=192.</description>
    </item>
    <item>
      <title>batzconverter â€“ A multiple timezone converter</title>
      <link>https://blog.chmouel.com/2021/01/31/batzconverter-a-multiple-timezone-converter/</link>
      <pubDate>Sun, 31 Jan 2021 16:42:14 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/01/31/batzconverter-a-multiple-timezone-converter/</guid>
      <description>I write a lot of scripts to automate my day to day workflow, some of them I just wrote for 3h to save me 5mn only once and some others I write for about 5mn but save me hours of boreness and repetitive task.
The script showed today, that I am proud of because of its usefulness and probably not of its code, is called &amp;ldquo;batzconverter&amp;rdquo; available on https://github.com/chmouel/batzconverter. What the script is trying to solve is when you work with your team spread around 3/4 timezones, how do you schedule a meeting easily.</description>
    </item>
    <item>
      <title>Building packages for multiple distros on launchpad with docker</title>
      <link>https://blog.chmouel.com/2021/01/31/building-packages-for-multiple-distros-on-launchpad-with-docker/</link>
      <pubDate>Sun, 31 Jan 2021 15:59:43 +0000</pubDate>
      <guid>https://blog.chmouel.com/2021/01/31/building-packages-for-multiple-distros-on-launchpad-with-docker/</guid>
      <description>I have been trying to build some packages for the ubuntu distros for a new program I have released, gnome-next-meeting-applet
In short, it what quite painful! if you are quite new to the launchpad and debian packaging ways (which I wasn&amp;rsquo;t and yet It took me some time to figure out) you can get quite lost. I got to say that the fedora copr experience is much smoother. After a couple of frustrated google and stackoverflow searches and multiple tries I finally figured out a script that builds and upload properly to launchpad via docker to make it available to my users.</description>
    </item>
    <item>
      <title>Tekton yaml templates and script feature</title>
      <link>https://blog.chmouel.com/2020/07/28/tekton-yaml-templates-and-script-feature/</link>
      <pubDate>Tue, 28 Jul 2020 08:55:07 +0000</pubDate>
      <guid>https://blog.chmouel.com/2020/07/28/tekton-yaml-templates-and-script-feature/</guid>
      <description>Don&amp;rsquo;t you love &amp;ldquo;yaml&amp;rdquo;, yes you do ! or at least that&amp;rsquo;s what the industry told you to love!
When you were in school your teacher told you about &amp;ldquo;XML&amp;rdquo; and how it will solve all the industry problems (and there was many in the late 90s). But you learned that you hate reaching to your &amp;quot;&amp;lt;&amp;quot; and&amp;quot; &amp;quot;&amp;gt;&amp;quot; keys and rather have something else. So then the industry came up with &amp;ldquo;json&amp;rdquo; so computer or yourself can talk to each others, that&amp;rsquo;s nice for computers but actually not so nice for yourself it was actually a lie and was not made for yourself to read and write but only for comptures.</description>
    </item>
    <item>
      <title>Deploying minishift on a remote laptop.</title>
      <link>https://blog.chmouel.com/2017/06/09/deploying-minishift-on-a-remote-laptop/</link>
      <pubDate>Fri, 09 Jun 2017 13:31:28 +0000</pubDate>
      <guid>https://blog.chmouel.com/2017/06/09/deploying-minishift-on-a-remote-laptop/</guid>
      <description>Part of my new job working with Fabric8 is to having it deployed via minishift.
Everything is nice and working (try it it&amp;rsquo;s awesome https://fabric8.io/guide/getStarted/gofabric8.html) as long you deploy it on your local workstation.
The thing is that my desktop macosx laptop has only 8GB of RAM and is not very well up to the task to get all the services being deployed when I have my web browser and other stuff hogging the memory.</description>
    </item>
    <item>
      <title>Getting a letsencrypt SSL certificate for the OpenShift console and API</title>
      <link>https://blog.chmouel.com/2016/09/29/getting-a-letsencrypt-ssl-certificate-for-the-openshift-console-and-api/</link>
      <pubDate>Thu, 29 Sep 2016 08:22:48 +0000</pubDate>
      <guid>https://blog.chmouel.com/2016/09/29/getting-a-letsencrypt-ssl-certificate-for-the-openshift-console-and-api/</guid>
      <description>By default when you install an OpenShift install it would automatically generate its own certificates.
It uses those certificates for communication between nodes and as well to automatically auth the admin account. By default those same certificates are the one provided for the OpenShift console and API.
SinceÂ it is auto generated you will when connecting to the website with you webbrowser get an ugly error message :
and as the error message says that&amp;rsquo;sÂ notÂ very secure #sadpanda.</description>
    </item>
  </channel>
</rss>
