{"version":"https://jsonfeed.org/version/1","title":"Chmouel's blog","home_page_url":"https://blog.chmouel.com/","feed_url":"https://blog.chmouel.com/","items":[{"id":"https://blog.chmouel.com/2013/12/24/life-of-openstack-contributor-jenkins-failure/","title":"The life of an OpenStack contributor checking for Jenkins failures","content_text":"We have all been there, we are committing a two character change in a project and send our review all happy and dandy with the review tool full of hope that our change is rock solid :\nYou now that a two character change cannot fail. This is a tiny change in some arcane part of the Swift code that can never get passed by the tests launched in Jenkins and should just be a straightforward commit.","url":"https://blog.chmouel.com/2013/12/24/life-of-openstack-contributor-jenkins-failure/","date_published":"2013-12-24 20:36:40 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/09/27/how-to-access-rackspace-cloud-with-latest-swiftclient-novaclient/","title":"How to access Rackspace Cloud with latest novaclient/swiftclient","content_text":"I spent too much time trying to figure out how to use the latest swiftclient/novaclient with Rackspace Cloud that I thought I would have to document it somewhere to avoid the pain for others.\nAssuming you don\u0026rsquo;t want to use pyrax and no OS_AUTH_SYSTEM plugin but just pure OpenStack python-novaclient/swiftclient on Rackspace cloud then you just need to export those variables in your shell :\nso now the region is ORD here (Chicago) but this can be SYD/IAD/DFW or whatever new datacenter/region from Rackspace.","url":"https://blog.chmouel.com/2013/09/27/how-to-access-rackspace-cloud-with-latest-swiftclient-novaclient/","date_published":"2013-09-27 03:50:51 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/07/17/quick-swift-tip-how-to-remove-a-header-with-curl/","title":"Quick Swift Tip: How to remove a header with Curl","content_text":"curl is obviously an extremely popular way to experiment a REST API. Unfortunately one of its shortcoming is not able to remove a custom header but just to modify or add it. In swift if you prefix your Meta header with X-remove it would then just do that and remove the header.\nFor example when I wanted to remove the account quota header from an account with a reseller admin token I had just to do that :","url":"https://blog.chmouel.com/2013/07/17/quick-swift-tip-how-to-remove-a-header-with-curl/","date_published":"2013-07-17 10:07:50 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/06/14/how-to-launch-the-swift-functional-test-suite-with-keystone/","title":"How to launch the Swift functional test suite with Keystone","content_text":"It is easy to launch the swift functional tests with v2 auth (Keystone).\nAssuming you have a recent version of python-swiftclient, python-keystoneclient and swift you need to first add a few users which is easily done with this script :\nAssuming you have already your OS_* variables configured with an admin, you can just launch it and it will :\n add a tenant/user named test/tester. add a tenant/user name test2/tester2.","url":"https://blog.chmouel.com/2013/06/14/how-to-launch-the-swift-functional-test-suite-with-keystone/","date_published":"2013-06-14 15:46:19 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/05/02/keystone-pki-tokens-overview/","title":"Keystone and PKI tokens overview","content_text":"PKI tokens has been implemented in keystone by Adam Young and others and was shipped for the OpenStack grizlly release. It is available since the version 2.0 API of keystone.\nPKI is a beautiful acronym to Public-key infrastructure which according to wikipedia defines it like this :\n Public-key cryptography is a cryptographic technique that enables users to securely communicate on an insecure public network, and reliably verify the identity of a user via digital signatures.","url":"https://blog.chmouel.com/2013/05/02/keystone-pki-tokens-overview/","date_published":"2013-05-02 08:00:15 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/04/22/howto-revoke-a-token-with-keystone-and-pki-v2-0-api/","title":"Howto revoke a token with keystone and PKI (v2.0 API)","content_text":"This is something I have been asked and I was at first under impression it was only available in v3, digging a bit more into the code there is actually a way to do that in v2 when you are using PKI tokens. Since I could not find much documentation online here is a description of the steps how to do it.\nLet first get a PKI token, you can do it the hard way by sending a json blob to the keystone url and parse the json results like this :","url":"https://blog.chmouel.com/2013/04/22/howto-revoke-a-token-with-keystone-and-pki-v2-0-api/","date_published":"2013-04-22 22:38:27 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/04/11/trying-to-be-pylint-compatible/","title":"On trying to be pylint compatible","content_text":"How I feel when I try to address all pylint warning/errors:\n\n Adapted from http://devopsreactions.tumblr.com/post/47690154351/trying-to-code-to-w3c-standards","url":"https://blog.chmouel.com/2013/04/11/trying-to-be-pylint-compatible/","date_published":"2013-04-11 09:35:29 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/03/08/swift-and-quotas-in-upcoming-1-8-0-grizzly-release/","title":"Swift and quotas in upcoming 1.8.0 (Grizzly) release.","content_text":"There is two new nifty middlewares for doing quotas in upcoming Swift release 1.8.0 called container_quotas and account_quotas.\nThose are two different middlewares because they are actually addressing different use cases.\ncontainer_quotas is typically used by end users the use case here is to let user to specify a limit on one of their container.\nWhy would you want to restrict yourself you may ask ? This is because when you allow a public upload to a container for example with tempurl or/and formpost you want to make sure people are not uploading a unlimited amount of datas.","url":"https://blog.chmouel.com/2013/03/08/swift-and-quotas-in-upcoming-1-8-0-grizzly-release/","date_published":"2013-03-08 20:45:44 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/","title":"emacs anything with magit","content_text":"I have been using quite a bit the anything-mode for Emacs, it\u0026rsquo;s basically a Quicksilver/Alfred or Gnome-do for Emacs and allow to configure a lot of different sources to complete some chosen \u0026lsquo;source\u0026rsquo;with different actions.\nWith my work on OpenStack I have found myself jumping a lot between git directories and due configured the variable \u0026lsquo;magit-repo-dirs for easy access to most of them easily.\nPlugging those two just seemed natural I had already this in my emacs to quickly open those magit repository directories :","url":"https://blog.chmouel.com/2013/02/10/emacs-anything-with-magit/","date_published":"2013-02-10 21:48:33 +0000 UTC"},{"id":"https://blog.chmouel.com/2013/02/01/swift-with-cors-request/","title":"Upload to OpenStack Swift via CORS/HTML5 request.","content_text":"One of our client at eNovance had a need to be able to upload to Swift directly from a web browser without going via a PHP proxy.\nThings in browser-land are not exactly the same as what we have in user-land, it is a bit more restricted to ensure the end-user security and there is a few hoops to jump through to get it working.\nTo be able to do a xmlrpc upload to another server (swift in this case) there is a \u0026lsquo;standard/recommendation\u0026rsquo; document made by W3C about it located here :","url":"https://blog.chmouel.com/2013/02/01/swift-with-cors-request/","date_published":"2013-02-01 12:06:23 +0000 UTC"}]}