{"version":"https://jsonfeed.org/version/1","title":"Chmouel's blog","home_page_url":"https://blog.chmouel.com/","feed_url":"https://blog.chmouel.com/","items":[{"id":"https://blog.chmouel.com/2011/12/28/my-training-year-cycling-and-running/","title":"My stats for this year running and cycling","content_text":"Running 1,266 km (786 miles):\n\nCycling 3865 km (2401 miles):\n\nLet\u0026rsquo;s see if I can improve for next year","url":"https://blog.chmouel.com/2011/12/28/my-training-year-cycling-and-running/","date_published":"2011-12-28 19:08:27 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/11/24/swift-and-keystone-middleware-part1/","title":"Swift and Keystone middleware","content_text":"[NB: Much things has changed since I have written this article but keeping it here for info]It seems that integrating Swiftand Keystonetogether present some challenges to people and this is absolutely normal as there is a lot of changes going on. This is my attempt to document how everything is plugged together.\nI am not going to explain how a middleware is supposed to work as this is nicely documented on Wikipedia :","url":"https://blog.chmouel.com/2011/11/24/swift-and-keystone-middleware-part1/","date_published":"2011-11-24 09:20:39 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/09/02/debugging-python-novaclient-on-the-command-line/","title":"Debugging python-novaclient on the command line.","content_text":"I have done lately quite a bit of work with python-novaclientthe (nova/keystone) openstack client. I often experiment it with ipythonin the console.\nThere is a nice debugging facility in novaclient which you can see while using \u0026ndash;debug argument on the command line and if you wanted to use it with ipython you could have that at the beginning of your session :\nThis would give you the details of the session showing you the REST requests and responses including the headers.","url":"https://blog.chmouel.com/2011/09/02/debugging-python-novaclient-on-the-command-line/","date_published":"2011-09-02 03:00:13 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/07/17/rackspace-clouddns-python-binding/","title":"Rackspace CloudDNS python binding","content_text":"I have released a python binding to Rackspace CloudDNShere which allow you to create/update/delete domains and records. It\u0026rsquo;s available on github\nhttps://github.com/rackspace/python-clouddns/The binding is pretty simple and have unfortunately no documentation (or even tests) but you can figure out most of it from here :\nhttps://github.com/rackspace/python-clouddns/blob/master/tests/t.pyI will be very welcoming pull request that add a bit of documentation.","url":"https://blog.chmouel.com/2011/07/17/rackspace-clouddns-python-binding/","date_published":"2011-07-17 07:32:09 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/05/05/mass-editing-firewall-on-rackspace-cloud/","title":"Mass editing firewall on Rackspace Cloud.","content_text":"A lot of our customers in Rackspace cloud has been asking how to mass edit firewalls of servers when you have multiple servers without doing it manually.\nPart of my cloudservers-api-demo I have written a simple firewall scripts abstracting the Operating System firewall software to allow/enable/disable the firewall and ports/networks.\nThe script has been kept very simple by design and currently allow only to :\n   \u0026lt;p style=\u0026quot;display: inline !","url":"https://blog.chmouel.com/2011/05/05/mass-editing-firewall-on-rackspace-cloud/","date_published":"2011-05-05 22:12:42 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/04/07/howto-shutdown-your-cloud-server-and-not-getting-billed-for-it/","title":"Howto shutdown your Cloud Server and not getting billed for it.","content_text":"Currently in Rackspace-Cloud when you are shutting-down your Cloud Servers you are still paying for it.\nThe reason is that when the Cloud Server is shut-down your CloudServer is still sitting on the hyper-visor and still use resources on the Cloud and then get you billed for it.\nThere is a way to get around it by having the CloudServer stored as an image into CloudFiles.\nThe caveat with this solution is that every-time you are creating a server out of the stored image you are getting a new IP and in certain cases you would need to make a change in your application with the new IP.","url":"https://blog.chmouel.com/2011/04/07/howto-shutdown-your-cloud-server-and-not-getting-billed-for-it/","date_published":"2011-04-07 09:36:28 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/04/06/uploading-to-rackspace-cloud-files-via-ftp/","title":"Uploading to Rackspace Cloud Files via FTP","content_text":"Sometime ago I wrote a FTP proxy to RackSpace Cloud Files which expose Rackspace Cloud Files as a FTP server acting as a proxy.\nThanks to the OpenSource community a user on github took it and add support OpenStack and all the latest features available in Cloud Files.\nIt is now pretty robust and works pretty well via nautilus even with the pseudo hierarchical folder feature. The fun part here is that it allow you to effectively have a Cloud Drive where you can easily store your files/backup from your Linux desktop via nautilus built-in ftp support.","url":"https://blog.chmouel.com/2011/04/06/uploading-to-rackspace-cloud-files-via-ftp/","date_published":"2011-04-06 13:05:44 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/02/16/installing-python-cloudfiles-from-pypi/","title":"Installing python-cloudfiles from pypi","content_text":"I have just uploaded python-cloudfiles to pypi available here\nThis make things easy to add as a dependence of your project like you can have something like this in your setup.py :\nrequirements = ['python-cloudfiles']\nand it will automatically download it as part of the dependence with easy_install or pip.\ncool kids on latest debian/ubuntu can do stuff like this (from python-stdeb package) :\npypi-install python-cloudfiles\nwhich would automatically download the tarball from pypi and install it as a packages (like the way it should be for prod machine!","url":"https://blog.chmouel.com/2011/02/16/installing-python-cloudfiles-from-pypi/","date_published":"2011-02-16 05:41:33 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/02/07/how-to-use-fireuploader-with-the-rackspace-cloud-uk/","title":"How to use fireuploader with the Rackspace Cloud UK","content_text":"Fireuploader is a Firefox addon that gives you a nice GUI to upload files via your firefox browser.\nI have made a special version of the extensions to make it works with the RackSpace Cloud UK.\nInstall the addon from here :\nhttp://www.chmouel.com/pub/firefox_universal_uploader__fireuploader_-0.4.5-fx+mz+ukcf.xpi\nAllow the website by clicking Allow in the yellow bar on the top as seen in this screenshot :\n\nClick on Install Now and restart Firefox.","url":"https://blog.chmouel.com/2011/02/07/how-to-use-fireuploader-with-the-rackspace-cloud-uk/","date_published":"2011-02-07 11:16:05 +0000 UTC"},{"id":"https://blog.chmouel.com/2011/01/12/howto-access-the-uk-rackspace-cloud-with-the-php-binding/","title":"Howto access the UK Rackspace Cloud with the PHP Binding","content_text":"One of the last library I didn\u0026rsquo;t documented in my earlier post was php-cloudfiles. You need to have at least the version 1.7.6 released to have support to different auth_server and when you have that you can do it like this to get access to cloud files via the library :","url":"https://blog.chmouel.com/2011/01/12/howto-access-the-uk-rackspace-cloud-with-the-php-binding/","date_published":"2011-01-12 16:17:07 +0000 UTC"}]}